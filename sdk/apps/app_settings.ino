#define appNameClass    SettingsApp     // App name without spaces
#define appName         "Settings"      // App name with spaces 

#define SETTINGS_ELEMENTS

#define PAGES_LIST_HEIGHT               20
#define ACTIVE_SCREEN_WIDTH             SCREEN_WIDTH
#define ACTIVE_SCREEN_HEIGHT            (SCREEN_HEIGHT - STYLE_STATUSBAR_HEIGHT - PAGES_LIST_HEIGHT)
#define SINGLE_ELEMENT_MIN_WIDTH        200
#define SINGLE_ELEMENT_MIN_HEIGHT       60

#define SINGLE_ELEMENTS_IN_X            ((int)(ACTIVE_SCREEN_WIDTH/SINGLE_ELEMENT_MIN_WIDTH))
#define SINGLE_ELEMENTS_IN_Y            ((int)(ACTIVE_SCREEN_HEIGHT/SINGLE_ELEMENT_MIN_HEIGHT))

#define SINGLE_ELEMENT_REAL_WIDTH       ((int)(ACTIVE_SCREEN_WIDTH/SINGLE_ELEMENTS_IN_X))
#define SINGLE_ELEMENT_REAL_HEIGHT      ((int)(ACTIVE_SCREEN_HEIGHT/SINGLE_ELEMENTS_IN_Y))

#define PAGES_LIST_POSITION             (SCREEN_HEIGHT-PAGES_LIST_HEIGHT/2)
#define APPS_ON_SINGLE_PAGE             (SINGLE_ELEMENTS_IN_X * SINGLE_ELEMENTS_IN_Y)


// SUBMENUES
#define APP_SETTINGS_SUBMENU_MAIN 0x01

// SETTINGS PAGES
#define APP_SETTINGS_PAGE_TOTAL_ELEMENTS_MAIN 4

// # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # //

class appNameClass: public Application{
    public:
        virtual void onLoop() override;
        virtual void onDestroy() override;
        virtual void onEvent(unsigned char event, int val1, int val2) override;

        void onCreate();
        appNameClass(){ fillScreen(0, 0, 0); super_onCreate(); onCreate(); };
        static unsigned const char* getParams(const unsigned char type){
          switch(type){ 
            case PARAM_TYPE_NAME: return (unsigned char*)appName; 
            case PARAM_TYPE_ICON: return icon;
            default: return (unsigned char*)""; 
          }
        };
        const static unsigned char icon[] PROGMEM;
      
    private:
        const unsigned char* getApplicationTitle(unsigned char submenu, unsigned char num);
        const unsigned char* getApplicationIcon(unsigned char submenu, unsigned char num);
        void drawIcons(bool draw);
        void updateActiveAppIndex(int newSelectedAppIndex);
        void drawActiveAppFrame(bool draw);
        unsigned char getTotalPagesInSubMenu(unsigned char submenuType);
        unsigned char getTotalApplicationsInSubMenu(unsigned char subMenu);
        char app_settings_selectedAppIndex = 0;
        const static unsigned char def[]                PROGMEM;
        const static unsigned char icon_battery[]       PROGMEM;
        const static unsigned char icon_light[]         PROGMEM;
        const static unsigned char icon_time[]          PROGMEM;
        const static unsigned char icon_date[]          PROGMEM;
        const static unsigned char icon_sleep[]         PROGMEM;
        const static unsigned char currentSubMenu = 0x01;
        String getApplicationSubTitle(unsigned char submenu, unsigned char num);
};

unsigned char appNameClass::getTotalPagesInSubMenu(unsigned char submenuType){
    return (getTotalApplicationsInSubMenu(submenuType)%APPS_ON_SINGLE_PAGE==0?((int)(getTotalApplicationsInSubMenu(submenuType)/APPS_ON_SINGLE_PAGE)):((int)(getTotalApplicationsInSubMenu(submenuType)/APPS_ON_SINGLE_PAGE) + 1));
}

unsigned char appNameClass::getTotalApplicationsInSubMenu(unsigned char submenuType){
    switch (submenuType){
    case APP_SETTINGS_SUBMENU_MAIN:
        return APP_SETTINGS_PAGE_TOTAL_ELEMENTS_MAIN;
    default:
        return APP_SETTINGS_PAGE_TOTAL_ELEMENTS_MAIN;
    }
}


void appNameClass::onCreate(){
    
    core_views_draw_pages_list_simple(true, PAGES_LIST_POSITION, getTotalPagesInSubMenu(APP_SETTINGS_SUBMENU_MAIN));

    unsigned char currentPage = 0;
    if(currentPage==0) core_views_draw_active_page(true, PAGES_LIST_POSITION, getTotalPagesInSubMenu(APP_SETTINGS_SUBMENU_MAIN), currentPage);
    //else this->updateActiveAppIndex(app_settings_selectedAppIndex_presaved);  
    this->updateActiveAppIndex(app_settings_selectedAppIndex);  

    // Drawing icons
    this->drawIcons(true);
    this->drawActiveAppFrame(true);  
    
}

void appNameClass::updateActiveAppIndex(int newSelectedAppIndex){

  if(newSelectedAppIndex<0) newSelectedAppIndex = getTotalApplicationsInSubMenu(APP_SETTINGS_SUBMENU_MAIN) - 1;
  if(newSelectedAppIndex>=getTotalApplicationsInSubMenu(APP_SETTINGS_SUBMENU_MAIN)) newSelectedAppIndex = 0;

  if(app_settings_selectedAppIndex!=newSelectedAppIndex){
    
    this->drawActiveAppFrame(false);
    if( (int)((app_settings_selectedAppIndex)/APPS_ON_SINGLE_PAGE) != (int)((newSelectedAppIndex)/APPS_ON_SINGLE_PAGE)){
      // update page
      this->drawIcons(false);
      core_views_draw_active_page(false, PAGES_LIST_POSITION, getTotalPagesInSubMenu(APP_SETTINGS_SUBMENU_MAIN), (int)(app_settings_selectedAppIndex/APPS_ON_SINGLE_PAGE));
      app_settings_selectedAppIndex = newSelectedAppIndex;
      core_views_draw_active_page(true, PAGES_LIST_POSITION, getTotalPagesInSubMenu(APP_SETTINGS_SUBMENU_MAIN), (int)(app_settings_selectedAppIndex/APPS_ON_SINGLE_PAGE));
      this->drawIcons(true);
    }else{
      app_settings_selectedAppIndex = newSelectedAppIndex;
    }

    // update selected app frame
    this->drawActiveAppFrame(true);
  }
}

void appNameClass::drawActiveAppFrame(bool draw){
  unsigned char positionOnScreen     = app_settings_selectedAppIndex%APPS_ON_SINGLE_PAGE;
  unsigned char positionOnScreen_x   = app_settings_selectedAppIndex%SINGLE_ELEMENTS_IN_X;
  unsigned char positionOnScreen_y   = positionOnScreen/SINGLE_ELEMENTS_IN_X;

  int x0 = positionOnScreen_x*SINGLE_ELEMENT_REAL_WIDTH;
  int y0 = positionOnScreen_y*SINGLE_ELEMENT_REAL_HEIGHT + STYLE_STATUSBAR_HEIGHT+1;
  int x1 = x0+SINGLE_ELEMENT_REAL_WIDTH;
  int y1 = y0+SINGLE_ELEMENT_REAL_HEIGHT;

  if(draw) setDrawColor(196, 196, 196);
  else setDrawColor(getBackgroundColor_red(), getBackgroundColor_green(), getBackgroundColor_blue());

  for(unsigned char i=0; i<4; i++){
    unsigned char delta = 5+i;
    drawRect(x0+delta, y0+delta, x1-delta, y1-delta);  
  }
  
}

void appNameClass::drawIcons(bool draw){
  for (unsigned char y_position=0; y_position<SINGLE_ELEMENTS_IN_Y; y_position++){
        for (unsigned char x_position=0; x_position<SINGLE_ELEMENTS_IN_X; x_position++){
            int x0 = x_position*SINGLE_ELEMENT_REAL_WIDTH;
            int y0 = y_position*SINGLE_ELEMENT_REAL_HEIGHT + STYLE_STATUSBAR_HEIGHT+1;
            int x1 = x0+SINGLE_ELEMENT_REAL_WIDTH;
            int y1 = y0+SINGLE_ELEMENT_REAL_HEIGHT;

            int x_center = (x0+x1)/2;
            int y_center = (y0+y1)/2;

            int app_num = y_position*(SINGLE_ELEMENTS_IN_X) + x_position + APPS_ON_SINGLE_PAGE*(int)(app_settings_selectedAppIndex/APPS_ON_SINGLE_PAGE);

            
            if(app_num<getTotalApplicationsInSubMenu(APP_SETTINGS_SUBMENU_MAIN)){
              #ifdef ESP8266
                ESP.wdtDisable();
              #endif

            
              core_views_draw_settings_item(
                draw, 
                x0+35, y_center, 
                (const unsigned char*)this->getApplicationTitle(0, app_num), 
                this->getApplicationSubTitle(0, app_num), 
                this->getApplicationIcon(0, app_num)
              );
            }
        }
    }
}

void appNameClass::onLoop(){
    
}

void appNameClass::onDestroy(){
}

void appNameClass::onEvent(unsigned char event, int val1, int val2){
    
    if(event==EVENT_BUTTON_PRESSED){
      switch(val1){
        case 0:
          this->updateActiveAppIndex(app_settings_selectedAppIndex-1);
          break;
        case 3:
          startApp(-1);
          break;
        case 2:
          this->updateActiveAppIndex(app_settings_selectedAppIndex+1);
          break;
      }
    }else if(event==EVENT_BUTTON_RELEASED){

    }else if(event==EVENT_BUTTON_LONG_PRESS){

    }else if(event==EVENT_ON_TIME_CHANGED){

    }

}

const unsigned char* appNameClass::getApplicationTitle(unsigned char submenu, unsigned char num){
    switch(APP_SETTINGS_SUBMENU_MAIN){
        case APP_SETTINGS_SUBMENU_MAIN:
            switch (num){
                case 0:
                    return (const unsigned char*)"Sleep timout";
                case 1:
                    return (const unsigned char*)"Time";
                case 2:
                    return (const unsigned char*)"Date";
                case 3:
                    return (const unsigned char*)"Battery";
                case 3:
                    return (const unsigned char*)"Battery";
                
                default:
                    return (const unsigned char*)"Compass";
                    break;
            }
            break;
        default:
            return (const unsigned char*)"-";
    }
}

String appNameClass::getApplicationSubTitle(unsigned char submenu, unsigned char num){
    switch(APP_SETTINGS_SUBMENU_MAIN){
        case APP_SETTINGS_SUBMENU_MAIN:
            switch (num){
                case 0:
                    return String(core_cpu_getCpuSleepTimeDelay());
                case 1:
                    return "Time";
                case 2:
                    return "Date";
                case 3:
                    return "Battery";
                case 4:
                    return "Compass";
                
                default:
                    return "Reset maximum";
                    break;
            }
            break;
        default:
            return "-";
    }
}

const unsigned char* appNameClass::getApplicationIcon(unsigned char submenu, unsigned char num){
    switch(APP_SETTINGS_SUBMENU_MAIN){
        case APP_SETTINGS_SUBMENU_MAIN:
            switch (num){
                case 0:
                    return this->icon_sleep;
                case 1:
                    return this->icon_time;
                case 2:
                    return this->icon_date;
                case 3:
                    return this->icon_battery;
                case 4:
                    return this->icon_battery;

                
                default:
                    return this->def;
                    break;
            }
            break;
        default:
            return this->def;
    }
}


const unsigned char appNameClass::def[] PROGMEM = {
    0x02,0x01,0x02,0x08,0x02,0x08,0x04,0xff,0xff,0xff,0x80,0xE0,0xF8,0xFF,0xFF,0xF8,0xE0,0x80,
};

const unsigned char appNameClass::icon_battery[] PROGMEM = {
    0x02,0x01,0x02,0x18,0x02,0x18,0x04,0x33,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x6E,0xEE,0xE8,0x6E,0xEE,0xE8,0x6E,0xEE,0xE8,0x6E,0xEE,0xEE,0x6E,0xEE,0xEE,0x6E,0xEE,0xEE,0x6E,0xEE,0xE8,0x6E,0xEE,0xE8,0x6E,0xEE,0xE8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xF8,0x80,0x00,0x04,0x80,0x00,0x04,0x80,0x00,0x06,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x06,0x80,0x00,0x04,0x80,0x00,0x04,0xFF,0xFF,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

const unsigned char appNameClass::icon_light[] PROGMEM = {
    0x02,0x01,0x02,0x10,0x02,0x10,0x04,0xff,0xd9,0x00,0x03,0xC0,0x0F,0x30,0x1F,0x08,0x3F,0x04,0x7F,0x02,0x7F,
    0x02,0xFF,0x01,0xFF,0x01,0xFF,0x01,0xFF,0x01,0x7F,0x02,0x7F,0x02,0x3F,0x04,0x1F,0x08,0x0F,0x30,0x03,0xC0,
};

const unsigned char appNameClass::icon_time[] PROGMEM = {
    0x02,0x01,0x02,0x18,0x02,0x18,0x04,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x41,0x20,0x02,0x41,0x20,0x06,0xC3,0x60,0x02,0x59,0x20,0x02,0x41,0x20,0x02,0x59,0x20,0x02,0x41,0x20,0x02,0x41,0x20,0x02,0x41,0x20,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x02,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0xd8,0xd8,0xd8,0x3E,0x00,0x7C,0x22,0x00,0x44,0x21,0xFF,0xC4,0x20,0x00,0x04,0x40,0x00,0x02,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x40,0x00,0x02,0x20,0x00,0x04,0x13,0xFF,0xC8,0x12,0x00,0x48,0x1E,0x00,0x78,0x04,0x8f,0x8f,0x8f,0x00,0x00,0x00,0x1C,0x00,0x38,0x1C,0x00,0x38,0x1F,0xFF,0xF8,0x3F,0xFF,0xFC,0x78,0x00,0x0E,0x70,0x00,0x06,0x60,0x00,0x02,0x60,0x00,0x02,0x60,0x00,0x02,0x60,0x00,0x02,0x60,0x00,0x02,0x60,0x00,0x02,0x60,0x00,0x02,0x60,0x00,0x02,0x60,0x00,0x02,0x60,0x00,0x02,0x70,0x00,0x06,0x78,0x00,0x0E,0x3F,0xFF,0xFC,0x1F,0xFF,0xF8,0x0C,0x00,0x30,0x0C,0x00,0x30,0x00,0x00,0x00,
};

const unsigned char appNameClass::icon_date[] PROGMEM = {
    0x02,0x01,0x02,0x18,0x02,0x18,0x04,0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x00,0x78,0x00,0x00,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x78,0x00,0x00,0x78,0x00,0x00,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0xff,0xff,0xff,0xFF,0xFF,0xFF,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0xFF,0xFF,0xFF,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0x80,0x00,0x01,0xFF,0xFF,0xFF,0x04,0xd8,0xd8,0xd8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1E,0x3C,0x00,0x1E,0x3C,0x00,0x1E,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1E,0x3C,0x00,0x1E,0x3C,0x00,0x1E,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1E,0x3C,0x00,0x1E,0x3C,0x00,0x1E,0x3C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};

const unsigned char appNameClass::icon_sleep[] PROGMEM = {
    0x02,0x01,0x02,0x18,0x02,0x18,0x04,0xff,0xd9,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x07,0xC0,0x00,0x1F,0xF0,0x00,0x3E,0x08,0x00,0x78,0x00,0x00,0x70,0x00,0x00,0xF0,0x00,0x00,0xE0,0x00,0x00,0xE0,0x00,0x00,0xE0,0x00,0x00,0xF0,0x00,0x00,0x70,0x00,0x00,0x78,0x00,0x00,0x3E,0x08,0x00,0x1F,0xF0,0x00,0x07,0xC0,0x00,0x04,0xff,0xff,0xff,0x00,0x00,0x07,0x00,0x00,0x01,0x00,0x0F,0xC2,0x00,0x00,0xC4,0x00,0x01,0x87,0x00,0x03,0x00,0x00,0x06,0x00,0x00,0x0C,0x00,0x00,0x0F,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
};




const unsigned char appNameClass::icon[] PROGMEM = {
    
	/*            PUT YOUR ICON HERE            */

    0x02,0x01,0x02,0x20,0x02,0x20,0x04,0xff,0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0xC0,0x00,0x00,0x07,
    0xE0,0x00,0x00,0x0F,0xF0,0x00,0x00,0x0F,0xF0,0x00,0x00,0x0F,0xF0,0x00,0x00,0x0F,
    0xF0,0x00,0x00,0x07,0xE0,0x00,0x00,0x03,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x04,0xb4,0xb4,0xb4,0x00,0x0F,
    0xF0,0x00,0x00,0x0F,0xF0,0x00,0x00,0x0F,0xF0,0x00,0x00,0x0F,0xF0,0x00,0x08,0x0F,
    0xF0,0x10,0x1C,0x3F,0xFC,0x38,0x3E,0x7F,0xFE,0x7C,0x7F,0xF8,0x1F,0xFE,0xFF,0xE0,
    0x07,0xFF,0xFF,0xC0,0x03,0xFF,0x7F,0x80,0x01,0xFE,0x3F,0x00,0x00,0xFC,0x1F,0x00,
    0x00,0xF8,0x0E,0x00,0x00,0x70,0x0E,0x00,0x00,0x70,0x0E,0x00,0x00,0x70,0x0E,0x00,
    0x00,0x70,0x0E,0x00,0x00,0x70,0x0E,0x00,0x00,0x70,0x1F,0x00,0x00,0xF8,0x3F,0x00,
    0x00,0xFC,0x7F,0x80,0x01,0xFE,0xFF,0xC0,0x03,0xFF,0xFF,0xE0,0x07,0xFF,0x7F,0xF8,
    0x1F,0xFE,0x3E,0x7F,0xFE,0x7C,0x1C,0x3F,0xFC,0x38,0x08,0x0F,0xF0,0x10,0x00,0x0F,
    0xF0,0x00,0x00,0x0F,0xF0,0x00,0x00,0x0F,0xF0,0x00,0x00,0x0F,0xF0,0x00,0x04,0x47,
    0x47,0x47,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x07,
    0xE0,0x00,0x00,0x1F,0xF8,0x00,0x00,0x3F,0xFC,0x00,0x00,0x7F,0xFE,0x00,0x00,0xFF,
    0xFF,0x00,0x00,0xFC,0x3F,0x00,0x01,0xF8,0x1F,0x80,0x01,0xF0,0x0F,0x80,0x01,0xF0,
    0x0F,0x80,0x01,0xF0,0x0F,0x80,0x01,0xF0,0x0F,0x80,0x01,0xF8,0x1F,0x80,0x00,0xFC,
    0x3F,0x00,0x00,0xFF,0xFF,0x00,0x00,0x7F,0xFE,0x00,0x00,0x3F,0xFC,0x00,0x00,0x1F,
    0xF8,0x00,0x00,0x07,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
    0x00,0x00,
};